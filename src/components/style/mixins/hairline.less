@import '../themes/default.less';

.hairline-common(@direction) {
  position: absolute;
  z-index: 2;
  transform-origin: 100% 50%;
  content: '';
  & when (@direction = top) {
    transform: scaleY(0.5) translateY(-100%);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33) translateY(-100%);
    }
  }
  & when (@direction = bottom) {
    transform: scaleY(0.5) translateY(100%);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33) translateY(100%);
    }
  }
  & when (@direction = left) {
    transform: scaleY(0.5) translateY(-100%);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33) translateY(-100%);
    }
  }
  & when (@direction = right) {
    transform: scaleY(0.5) translateY(100%);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33) translateY(100%);
    }
  }
}

.hairline(@direction: all, @color: @color-border-base, @radius: 0, @size: @border-width-base) {
  & when (@direction = top) {
    &::after {
      .hairline-common(@direction);

      top: 0;
      right: auto;
      bottom: auto;
      left: 0;
      width: 100%;
      border-top: solid @size @color;
      transform-origin: 50% 0;
    }
  }

  & when (@direction = bottom) {
    &::before {
      .hairline-common(@direction);

      top: auto;
      right: auto;
      bottom: 0;
      left: 0;
      width: 100%;
      border-bottom: solid @size @color;
      transform-origin: 50% 100%;
    }
  }

  & when (@direction = left) {
    &::after {
      .hairline-common(@direction);

      top: 0;
      right: auto;
      bottom: auto;
      left: 0;
      height: 100%;
      border-left: solid @size @color;
      transform-origin: 0 50%;
    }
  }

  & when (@direction = right) {
    &::before {
      .hairline-common(@direction);

      top: 0;
      right: 0;
      bottom: auto;
      left: auto;
      height: 100%;
      border-right: solid @size @color;
      transform-origin: 100% 50%;
    }
  }

  & when (@direction = all) {
    &::after {
      position: absolute;
      top: 0;
      right: auto;
      bottom: auto;
      left: 0;
      z-index: 2;
      box-sizing: border-box;
      width: 200%;
      height: 200%;
      border: solid @size @color;
      // border-radius: ~'calc(@radius * 2)';
      border-radius: calc(~'@{radius} * 2');
      transform: scale(0.5);
      transform-origin: 0 0;
      content: '';
      // if radius is a 'unit'
      //   border-radius radius * 2
      // else
      //   border-radius "calc(%s * 2)" % radius
    }
  }
}
